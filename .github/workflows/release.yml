# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish algorithm image
env:
  HARBOR_HOST: harbor2.vantage6.ai

on:
  release:
    types: [ published ]

permissions:
  contents: write
  packages: write

jobs:
  job1:
    uses: ./.github/workflows/build_java.yml
  build-and-push:
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Download jar file
        uses: actions/download-artifact@v3
        with:
          name: jarfile
          path: java/verticox/target
      - name: Run Dunamai to get version
        uses: mtkennerly/dunamai-action@v1.1.0
        with:
          # Version of Dunamai to install (e.g., "1.3.0").
          # Name of environment variable in which to set the dynamic version.
          #If this is empty, no environment variable will be set.
          env-var: "VERTICOX_VERSION"# optional, default is
          # Command to run Dunamai.
          #command: # optional, default is dunamai from any
          # Additional arguments to pass to the command.
          args: --style semver --no-metadata

        # setup Docker build action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Harbor
        uses: docker/login-action@v1
        with:
          registry: ${{ env.HARBOR_HOST }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          # Note: tags has to be all lower-case
          tags: |
            ${{ env.HARBOR_HOST }}/carrier/verticox:${{env.VERTICOX_VERSION}}
            ${{ env.HARBOR_HOST }}/carrier/verticox


          # build on feature branches, push only on main branch
          push: true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

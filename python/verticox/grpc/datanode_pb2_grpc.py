# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from verticox.grpc import datanode_pb2 as verticox_dot_grpc_dot_datanode__pb2


class DataNodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.update = channel.unary_unary(
                '/DataNode/update',
                request_serializer=verticox_dot_grpc_dot_datanode__pb2.UpdateRequest.SerializeToString,
                response_deserializer=verticox_dot_grpc_dot_datanode__pb2.LocalAuxiliaries.FromString,
                )
        self.getNumFeatures = channel.unary_unary(
                '/DataNode/getNumFeatures',
                request_serializer=verticox_dot_grpc_dot_datanode__pb2.Empty.SerializeToString,
                response_deserializer=verticox_dot_grpc_dot_datanode__pb2.NumFeatures.FromString,
                )
        self.getNumSamples = channel.unary_unary(
                '/DataNode/getNumSamples',
                request_serializer=verticox_dot_grpc_dot_datanode__pb2.Empty.SerializeToString,
                response_deserializer=verticox_dot_grpc_dot_datanode__pb2.NumSamples.FromString,
                )


class DataNodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getNumFeatures(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getNumSamples(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=verticox_dot_grpc_dot_datanode__pb2.UpdateRequest.FromString,
                    response_serializer=verticox_dot_grpc_dot_datanode__pb2.LocalAuxiliaries.SerializeToString,
            ),
            'getNumFeatures': grpc.unary_unary_rpc_method_handler(
                    servicer.getNumFeatures,
                    request_deserializer=verticox_dot_grpc_dot_datanode__pb2.Empty.FromString,
                    response_serializer=verticox_dot_grpc_dot_datanode__pb2.NumFeatures.SerializeToString,
            ),
            'getNumSamples': grpc.unary_unary_rpc_method_handler(
                    servicer.getNumSamples,
                    request_deserializer=verticox_dot_grpc_dot_datanode__pb2.Empty.FromString,
                    response_serializer=verticox_dot_grpc_dot_datanode__pb2.NumSamples.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DataNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataNode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataNode/update',
            verticox_dot_grpc_dot_datanode__pb2.UpdateRequest.SerializeToString,
            verticox_dot_grpc_dot_datanode__pb2.LocalAuxiliaries.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getNumFeatures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataNode/getNumFeatures',
            verticox_dot_grpc_dot_datanode__pb2.Empty.SerializeToString,
            verticox_dot_grpc_dot_datanode__pb2.NumFeatures.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getNumSamples(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataNode/getNumSamples',
            verticox_dot_grpc_dot_datanode__pb2.Empty.SerializeToString,
            verticox_dot_grpc_dot_datanode__pb2.NumSamples.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
